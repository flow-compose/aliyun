packages = ["github.com/flow-contrib/aliyun", "github.com/lib/pq", "github.com/flow-contrib/toolkit/sql"]

app {
    name = "devops"
    usage = "fast build a devops development environment on aliyun"

    commands {
        describe {
            usage = "describe aliyun infrastructure"

            rds {
                usage = "describe rds stuff"

                attribute {
                    usage = "describe rds db instance attribute"
                    flow = ["devops.aliyun.rds.instance.attribute.describe"]
                }

                netinfo {
                    usage = "describe rds db instance netinfo"
                    flow = ["devops.aliyun.rds.instance.netinfo.describe"]
                }
            }


            slb {
                usage = "describe slb stuff"

                balancer {
                    usage = "describe slb balancer"
                    flow = ["devops.aliyun.slb.balancer.describe"]
                }
            }
        }
        init {
            usage = "init stuff"

            rds {
                usage = "init rds"

                db {
                    usage = "init database with sql"
                    flow = ["devops.aliyun.rds.instance.netinfo.describe?id=rds", "toolkit.sql.exec?id=init"]
                }
            }
        }
        create {
            usage = "create aliyun infrastructure instance"
            
            vpc {

                usage = "create vpc stuff"

                vpc {
                    usage = "create vpc instance"

                    default-config = {}

                    flow = ["devops.aliyun.vpc.vpc.create", "devops.aliyun.vpc.vpc.running.wait"]
                }

                vswitch {
                        usage = "create vpc vswitch"

                        default-config = {}

                        flow = ["devops.aliyun.vpc.vswitch.create"]
                }

                all {
                    flow = [
                            "devops.aliyun.vpc.vpc.create", 
                            "devops.aliyun.vpc.vpc.running.wait", 
                            "devops.aliyun.vpc.vswitch.create"
                        ]
                }
            }

            dns {
                domain {
                    usage = "management domain"
                    record {
                        usage = "add domain record"
                        flow = [
                            "devops.aliyun.slb.balancer.describe?id=slb",
                            "devops.aliyun.dns.domain.record.add?id=dns"
                        ]
                    }
                }
            }

            oss {
                usage = "create oss bucket"
                flow = ["devops.aliyun.oss.bucket.create"]
            }

            slb {
                usage = "create load balancer stuff"

                balancer {
                    usage = "create slb balancer"
                    flow = [
                        "devops.aliyun.slb.balancer.create"
                    ]
                }

                listener {
                    usage = "create slb balancer listener"
                    flow = [
                        "devops.aliyun.slb.balancer.listener.http.create",
                        "devops.aliyun.slb.balancer.listener.https.create",
                        "devops.aliyun.slb.balancer.listener.tcp.create",
                        "devops.aliyun.slb.balancer.listener.udp.create"
                    ]
                }

                vserver-group {
                    usage = "create slb balancer vgroup server"
                    flow = [
                        "devops.aliyun.slb.balancer.listener.vserver-group.create"
                    ]
                }

                rules {
                    usage = "create slb balancer listener's forward rules"
                    flow = [
                        "devops.aliyun.slb.balancer.listener.rules.create"
                    ]
                }

                all {
                    usage = "create all slb stuff"

                    flow = [
                        "devops.aliyun.slb.balancer.create",
                        "devops.aliyun.slb.balancer.listener.http.create",
                        "devops.aliyun.slb.balancer.listener.https.create",
                        "devops.aliyun.slb.balancer.listener.tcp.create",
                        "devops.aliyun.slb.balancer.listener.udp.create",
                        "devops.aliyun.slb.balancer.listener.vserver-group.create",
                        "devops.aliyun.slb.balancer.listener.rules.create"
                    ]
                }
            }

            rds {

                usage = "create rds infrastructure"

                instance {
                    usage = "create rds database instance"

                    flow = [
                        "devops.aliyun.rds.instance.create",
                        "devops.aliyun.rds.instance.running.wait"
                    ]
                }


                db {
                    account {
                        usage = "create rds database account and grant privilege"

                        flow = ["devops.aliyun.rds.instance.account.create"]
                    }

                    conn {
                        usage = "init rds public conn"
                        flow = ["devops.aliyun.rds.instance.conn.public.alloc"]
                    }

                    all {
                        flow = [
                            "devops.aliyun.rds.instance.account.create",
                            "devops.aliyun.rds.instance.conn.public.alloc"
                        ]
                    }
                }


                all {
                    usage = "create all rds database stuff"

                    flow = [
                        "devops.aliyun.rds.instance.create",
                        "devops.aliyun.rds.instance.running.wait",
                        "devops.aliyun.rds.instance.account.create",
                        "devops.aliyun.rds.instance.conn.public.alloc"
                    ]
                }
            }

            cs {
                usage = "create container service infrastructure"

                cluster {
                    usage = "create cluster"

                    flow  = [
                        "devops.aliyun.cs.cluster.create",
                        "devops.aliyun.cs.cluster.running.wait"
                    ]
                }

                volume {
                    usage = "create volume"

                    flow  = [
                        "devops.aliyun.cs.cluster.volume.create"
                    ]
                }

                project {
                    usage = "create project"

                    flow  = [
                        "devops.aliyun.rds.instance.netinfo.describe?id=rds"
                        "devops.aliyun.cs.cluster.project.create"
                    ]
                }

                all {
                    usage = "create all cs stuff"

                    flow = [
                        "devops.aliyun.rds.instance.netinfo.describe?id=rds",
                        "devops.aliyun.cs.cluster.create?id=cs",
                        "devops.aliyun.cs.cluster.running.wait?id=cs",
                        "devops.aliyun.cs.cluster.volume.create?id=cs",
                        "devops.aliyun.cs.cluster.project.create?id=cs"
                    ]
                }
            }

            all {
                usage = "create all infrastructure instance"

                default-config = {}

                flow = [
                    "devops.aliyun.vpc.vpc.create",
                    "devops.aliyun.vpc.vpc.running.wait",
                    "devops.aliyun.vpc.vswitch.create",
                    "devops.aliyun.oss.bucket.create",
                    "devops.aliyun.rds.instance.create",
                    "devops.aliyun.rds.instance.running.wait",
                    "devops.aliyun.cs.cluster.create",
                    "devops.aliyun.cs.cluster.running.wait",
                    "devops.aliyun.cs.cluster.volume.create",
                    "devops.aliyun.cs.cluster.project.create",
                    "devops.aliyun.slb.balancer.create",
                    "devops.aliyun.slb.balancer.listener.http.create",
                    "devops.aliyun.slb.balancer.listener.tcp.create",
                    "devops.aliyun.slb.balancer.listener.udp.create",
                    "devops.aliyun.slb.balancer.listener.vserver-group.create",
                    "devops.aliyun.slb.balancer.listener.rules.create"
                ]
            }
        }

        delete {
            usage = "delete aliyun infrastructure instance"

            vpc {

                usage = "delete vpc stuff"

                vpc {
                    usage = "delete vpc instance"

                    default-config = {}

                    flow = ["devops.aliyun.vpc.vpc.delete"]
                }

                vswitch {
                    usage = "delete vswitch instance"

                    default-config = {}

                    flow = ["devops.aliyun.vpc.vswitch.delete"]
                }

                all {
                     usage = "delete all vpc stuff"

                    default-config = {}

                    flow = ["devops.aliyun.vpc.vswitch.delete", "devops.aliyun.vpc.vpc.delete"]
                }
            }

            dns {
                usage = "delete dns stuff"

                domain {

                    usage = "delete dns domain stuff"
                    record {
                        usage = "delete dns domain record"
                        flow = ["devops.aliyun.dns.domain.record.delete"]
                    }
                }
            }

            oss {
                usage = "delete oss stuff"

                bucket {
                    usage = "delete oss bucket"
                    flow = ["devops.aliyun.oss.bucket.delete"]
                }
            }

            slb {
                usage = "delete load balancer instance"

                flow = ["devops.aliyun.slb.balancer.delete"]
            }

            rds {
                usage = "delete rds infrastructure"

                db {
                    usage = "delete rds database instance"

                    flow = ["devops.aliyun.rds.instance.delete"]
                }
            }

            cs {
                usage = "delete container service infrastructure"

                cluster {
                    usage = "delete cluster"

                    flow  = [
                       "devops.aliyun.cs.cluster.delete",
                       "devops.aliyun.cs.cluster.deleted.wait"
                    ]
                }

                project {
                    usage = "delete project"

                    flow  = ["devops.aliyun.cs.cluster.project.delete"]
                }
            }

            all {
                usage = "delete all infrastructure instance"

                default-config = {}

                flow = [
                    "devops.aliyun.cs.cluster.project.delete",
                    "devops.aliyun.cs.cluster.delete",
                    "devops.aliyun.cs.cluster.deleted.wait",
                    "devops.aliyun.rds.instance.delete",
                    "devops.aliyun.oss.bucket.delete",
                    "devops.aliyun.slb.balancer.delete",
                    "devops.aliyun.vpc.vswitch.delete",
                    "devops.aliyun.vpc.vpc.delete"
                ]
            }
        }
    }
}